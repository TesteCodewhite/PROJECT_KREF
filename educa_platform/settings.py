"""
Django settings for educa_platform project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os # Adicionado para STATICFILES_DIRS

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-x(15^lev+qo&o&7eokg*+c8!h!+uvqle$ez0zd8y3c55_z^f%5'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True # Mudar para False em produção

ALLOWED_HOSTS = [] # Configurar para produção


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites', # Necessário para allauth

    # Meus Apps
    'core.apps.CoreConfig',
    'accounts.apps.AccountsConfig',
    'dashboards.apps.DashboardsConfig',
    'api.apps.ApiConfig',

    # Apps de Terceiros
    'rest_framework',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    # Provedores específicos (ex: Google)
    'allauth.socialaccount.providers.google',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # Middleware do Allauth (adicionar após AuthenticationMiddleware)
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'educa_platform.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request', # Necessário para allauth
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'educa_platform.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
# Usando PostgreSQL conforme planejado (ajustar credenciais para produção)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3', # Mudar para 'django.db.backends.postgresql'
        'NAME': BASE_DIR / 'db.sqlite3',       # Configurar NAME, USER, PASSWORD, HOST, PORT para PostgreSQL
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators
# Reforçando validadores de senha
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 10, # Aumentado para 10
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
    # Adicionar validadores customizados se necessário
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'pt-br' # Alterado para Português do Brasil

TIME_ZONE = 'America/Sao_Paulo' # Alterado para fuso horário brasileiro

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
# STATIC_ROOT = BASE_DIR / 'staticfiles' # Descomentar para produção (collectstatic)

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Modelo de Usuário Customizado
AUTH_USER_MODEL = 'accounts.User'

# Configurações do Django Allauth
AUTHENTICATION_BACKENDS = [
    # Necessário para logar no admin com username
    'django.contrib.auth.backends.ModelBackend',
    # Autenticação específica do `allauth` (ex: login por e-mail)
    'allauth.account.auth_backends.AuthenticationBackend',
]

SITE_ID = 1 # Necessário para django.contrib.sites e allauth

ACCOUNT_AUTHENTICATION_METHOD = 'username_email' # Permitir login com username ou email
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = 'mandatory' # Ou 'optional' ou 'none'
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = True
ACCOUNT_USERNAME_MIN_LENGTH = 4
LOGIN_URL = '/accounts/login/' # Usar as URLs do allauth
LOGIN_REDIRECT_URL = '/dashboards/redirect/' # Redirecionar após login
ACCOUNT_LOGOUT_REDIRECT_URL = '/accounts/login/' # Redirecionar após logout

# Configurações do Provedor Social (Exemplo Google)
# As chaves (Client ID, Secret Key) devem ser obtidas no Google Cloud Console
# e armazenadas de forma segura (ex: variáveis de ambiente), NÃO diretamente no código.
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        },
        'OAUTH_PKCE_ENABLED': True,
        # 'APP': {
        #     'client_id': 'SEU_GOOGLE_CLIENT_ID',
        #     'secret': 'SEU_GOOGLE_SECRET_KEY',
        #     'key': '' # Opcional
        # }
    }
}

# Configurações de Email (Necessário para verificação de email)
# Configurar um backend de email real para produção (ex: SendGrid, Mailgun)
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend' # Para desenvolvimento
# EMAIL_HOST = 'smtp.example.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'seu_email@example.com'
# EMAIL_HOST_PASSWORD = 'sua_senha'
# DEFAULT_FROM_EMAIL = 'webmaster@localhost'

# Configurações de Segurança Adicionais (Ajustar para produção)
# SECURE_BROWSER_XSS_FILTER = True
# SECURE_CONTENT_TYPE_NOSNIFF = True
# CSRF_COOKIE_SECURE = False # Mudar para True em produção (HTTPS)
# SESSION_COOKIE_SECURE = False # Mudar para True em produção (HTTPS)
# SECURE_HSTS_SECONDS = 31536000 # Ex: 1 ano. Cuidado ao habilitar.
# SECURE_HSTS_INCLUDE_SUBDOMAINS = True
# SECURE_HSTS_PRELOAD = True
# SECURE_SSL_REDIRECT = False # Mudar para True em produção (HTTPS)


